# -*- coding: utf-8 -*-
"""Data Preprocessing dan EDA.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1TeijtthViC-jOoZqhAJCS2G9ZlwE1p6T

Di tugas ini, anda bertugas untuk melakukan beberapa hal.

Topik utama dalam tugas ini adalah pemrosesan data. **Anda diharuskan mengumpulkan data, membangun dataset yang sesuai dengan kebutuhan, membersihkan dataset tersebut dengan langkah yang tepat, dan memastikan data yang telah kita bangun dalam kondisi valid.**

# **Tugas 2 Laboratorium Probabilitas dan Statistika - Data Preprocessing & EDA (Part 1)**
(Muhammad Putra Harifin Pane / 221401072)

## Import Library

Disini lakukan import terhadap library yang anda butuhkan. Ingat bahwa anda perlu melakukan pengumpulan dan membangun dataset, memahami kondisi data secara visual, melihat kondisi statistik deskriptif dan persebaran data.
"""

# Import library
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
import plotly.express as px

"""## Load Dataset

Disini, anda akan menghubungkan sumber data anda kedalam notebook. Lalu, anda akan memasukkan dataset-dataset yang anda gunakan kedalam program disini.
"""

# Masukkan dataset-dataset anda kedalam program

from google.colab import files
uploaded = files.upload()

#gunakan perintah dibawah untuk mengecek tampilan dataframe

df = pd.read_csv('ds_salaries.csv')
df

"""## Data Preprocessing

Disini, tugas anda adalah melakukan beberapa ***treatment***, atau "tindakan" terhadap data. Anda akan mengubah susunan dan bentuk data, pembersihan, dan validasi.
"""

df = pd.read_csv('ds_salaries.csv')

df

"""mengecek beberapa data pertama"""

df.head()

"""mengecek beberapa data akhir"""

df.tail()

"""mengecek beberapa sample"""

df.sample(5)

"""mengecek variabel variabel coloums"""

df.columns

"""menghapus beberapa kolom yang tidak berguna
disini saya menghapus kolom salary dan salary curruecy karena sudah ada data conversi nya dengan mata uang usd jadi lebih memudahkan dalam mengolah data
"""

df.drop("salary_currency",axis=1,inplace=True)
df.drop("salary",axis=1,inplace=True)

df

"""mengoreksi tipe variabel
tipe data setiap kolom

"""

df.info()

df["experience_level"]= df["experience_level"].astype("string")
df["employment_type"]= df["employment_type"].astype("string")
df["job_title"]= df["job_title"].astype("string")
df["employee_residence"]= df["employee_residence"].astype("string")
df["company_location"]= df["company_location"].astype("string")
df["company_size"]= df["company_size"].astype("string")

df.info()

"""menghilangkan duplikasi di dalam data"""

#pertama kita harus cek dahulu apakah ada data yang duplikat
#jika ada maka bisa kita hilangkan
print(df.shape)
df.duplicated().sum()

"""terdapat duplikat sebanyak 1171"""

df.drop_duplicates(inplace=True)
print(df.duplicated().sum()) #agar tidak ada lagi yang duplikat
print(df.shape) #mengecek kembali ukuran data

"""tidak ada lagi duplikat
ukuran data berkurang dari sebelum nya 3755 menjadi 2584

distribusi normal untuk salary_in_usd
"""

p = sns.displot(df['salary_in_usd'],kde=True,rug=True)

"""cara untuk mengecek missing values"""

print(df.isnull().sum())

"""perintah untuk melihat apakah ada missing value jika ada maka akan ada garis putih dan karena data nya sudah bersih maka tidak ada garis putih"""

sns.heatmap(df.isnull(),cbar=False)
plt.title('Heatmap Missing Value')
plt.show()

"""tidak ada missing value dalam data

**Statistika Deskriptif**
"""

df.describe()

"""# **VISUALISASI**"""

pip install fitter #Untuk menginstall fitter

from fitter import Fitter, get_distributions
f = Fitter(df['salary_in_usd'], distributions = ['norm', 'chi2', 'f', 't'])
f.fit()
f.summary()

"""distribusi ukuran company"""

group = df['company_size'].value_counts()

fig = px.bar(y = group.values, x = group.index,
             color = group.index, text = group.values,
             title = 'Distribution of Company Size')

fig.update_layout(xaxis_title = "Company Size", yaxis_title = "count")
fig.show()

"""distribusi tahun kerja

"""

work_year = df['work_year'].value_counts()
fig = px.pie(values = work_year.values, names = work_year.index,
            title = 'Work year distribution')
fig.show()

"""distribusi job title

"""

top15_job_titles = df['job_title'].value_counts()[:15]
fig = px.bar(y = top15_job_titles.values, x = top15_job_titles.index,
            text = top15_job_titles.values, title = 'Top 15 Job Designations')
fig.update_layout(xaxis_title = "Job Designations", yaxis_title = "Count")
fig.show()

"""### Data Wrangling

Ubahlah data anda kedalam bentuk yang lebih masuk akal. Contohnya adalah :
* Mengubah index atau label baris tabel
* Agregasi data
* Menggabungkan beberapa dataset menjadi satu
* Mengatur ulang bagaimana data disajikan dalam tabel
* Mengurutkan data dengan baik dan benar
* Menyaring data sesuai kebutuhan
"""

# Jelaskan tahapan yang kalian lakukan disini

"""### Data Cleansing

Bersihkan data!
* Pastikan tidak ada kolom kosong. Jika ada, lakukan tindakan yang tepat. Apakah anda akan menggantinya dengan rata-rata? Dengan median? atau modus? Atau dengan nilai lainnya?
* Apakah ada data duplikat?
* Apakah ada *outlier*? Lalu, bagaimana tindakan anda? Jelaskan alasan anda!

### Data Validation

Disini, tugas anda adalah memastikan data yang anda miliki valid. Contohnya :
* Tipe Data tiap kolom sudah tepat (Cth: NIM dan ID dalam string)
* Tiap Data berada dalam range yang masuk akal (Cth: Umur manusia tidak ada yang minus)
* Tiap Data dalam satuan, unit, ataupun bernilai yang tepat dan masuk akal (Cth: Kecepatan dalam m/s dan bukan mph, umur dalam tahun, bukan dalam hari atau detik)
"""

# Jelaskan tahapan validasi anda!

"""## Exploratory Data Analysis

Disini, silahkan lakukan eksplorasi tentang kondisi dan hubungan antar satu data dengan yang lain.

### Univariate Analysis

Lakukan analisis kepada tiap variabel. Lihatlah statistika deskriptif tiap variabel, visualisasikan sebaran tiap variabel, dan lihat secara mendalam distribusi tiap variabel.
"""

# Cek Sebaran, Statistika Deskriptif, dan Distribusi Data
# Jangan lupa untuk memvisualisasikan data-data ini